{"version":3,"file":"okta-react.umd.js","sources":["../../src/OktaContext.ts","../../src/OktaError.tsx","../../src/LoginCallback.tsx","../../src/RouteGuard.tsx","../../src/Security.tsx","../../src/withOktaAuth.tsx"],"sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState;\n    _onAuthRequired: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext);\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst LoginCallback: React.FC<{ \n  errorComponent?: React.ComponentType<{ error: Error }>,\n  onAuthResume?: OnAuthResumeFunction,\n}> = ({ errorComponent, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const authStateReady = !authState.isPending;\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n\n    if (onAuthResume && oktaAuth.isInteractionRequired?.() ) {\n      onAuthResume();\n      return;\n    }\n    oktaAuth.handleLoginRedirect()\n    .catch( err => { \n      console.log(err); //TODO: handle these errors OKTA-361608\n    });  \n\n  }, [oktaAuth]);\n\n  if(authStateReady && authState.error) { \n    return <ErrorReporter error={authState.error}/>;\n  }\n\n  return null;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useOktaAuth } from './OktaContext';\n\nconst RouteGuard: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children }) => {\n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const location = useLocation();\n  const pendingLogin = React.useRef(false);\n  const [requestedLocation, setRequestedLocation] = React.useState(null);\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n      oktaAuth.setOriginalUri();\n\n      await oktaAuth.signInWithRedirect();\n    };\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if (!authState.isAuthenticated && !authState.isPending) {\n      handleLogin();\n    }\n  }, [authState.isPending, authState.isAuthenticated, oktaAuth, _onAuthRequired]);\n\n  if (!authState.isAuthenticated) {\n    if (location.pathname !== requestedLocation) {\n      setRequestedLocation(location.pathname);\n    }\n    return null;\n  }\n\n  // This is done so that in case the route changes by any chance through other\n  // means between the moment of request and the render we navigate to the initially\n  // requested route.\n  if (requestedLocation && location.pathname !== requestedLocation) {\n    setRequestedLocation(null);\n    return <Navigate to={requestedLocation} />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default RouteGuard;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return { \n        isPending: true,\n        isAuthenticated: false,\n        idToken: null,\n        accessToken: null,\n      };\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    oktaAuth.options.restoreOriginalUri = async (oktaAuth: unknown, originalUri: string) => {\n      restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    };\n\n    // Add okta-react userAgent\n    oktaAuth.userAgent = `${process.env.PACKAGE_NAME}/${process.env.PACKAGE_VERSION} ${oktaAuth.userAgent}`;\n\n    // Update Security provider with latest authState\n    oktaAuth.authStateManager.subscribe((authState) => {\n      setAuthState(authState);\n    });\n\n    // Trigger an initial change event to make sure authState is latest\n    if (!oktaAuth.isLoginRedirect()) {\n      oktaAuth.authStateManager.updateAuthState();\n    }\n\n    return () => oktaAuth.authStateManager.unsubscribe();\n  }, [oktaAuth, restoreOriginalUri]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n"],"names":["OktaContext","React","useOktaAuth","OktaError","error","name","message","toString","errorComponent","onAuthResume","oktaAuth","authState","authStateReady","isPending","ErrorReporter","isInteractionRequired","handleLoginRedirect","err","console","log","children","_onAuthRequired","location","useLocation","pendingLogin","requestedLocation","setRequestedLocation","handleLogin","current","setOriginalUri","signInWithRedirect","isAuthenticated","pathname","Navigate","to","restoreOriginalUri","onAuthRequired","authStateManager","getAuthState","idToken","accessToken","setAuthState","options","warn","originalUri","userAgent","subscribe","isLoginRedirect","updateAuthState","unsubscribe","AuthSdkError","Provider","value","ComponentToWrap","WrappedComponent","props","oktaAuthProps","displayName"],"mappings":"6pDAyBMA,EAAcC,gBAAyC,MAEhDC,EAAc,kBAAoBD,aAAiBD,ICb1DG,EAAwC,gBAAGC,IAAAA,aAC5CA,EAAMC,MAAQD,EAAME,QACdL,yBAAIG,EAAMC,UAAQD,EAAME,SAE1BL,mCAAWG,EAAMG,6BCCrB,gBAAGC,IAAAA,eAAgBC,IAAAA,eACUP,IAAxBQ,IAAAA,SAAUC,IAAAA,UACZC,GAAkBD,EAAUE,UAC5BC,EAAgBN,GAAkBL,SAExCF,aAAgB,iBAEVQ,cAAgBC,EAASK,iDAATL,IAClBD,IAGFC,EAASM,6BACD,SAAAC,GACNC,QAAQC,IAAIF,QAGb,CAACP,IAEDE,GAAkBD,EAAUP,MACtBH,gBAACa,GAAcV,MAAOO,EAAUP,QAGlC,mCCzB0D,gBAAGgB,IAAAA,WACnBlB,IAAzCQ,IAAAA,SAAUC,IAAAA,UAAWU,IAAAA,gBACvBC,EAAWC,gBACXC,EAAevB,UAAa,OACgBA,WAAe,SAA1DwB,OAAmBC,cAE1BzB,aAAgB,eACR0B,8CAAc,iGACdH,EAAaI,gEAIjBJ,EAAaI,SAAU,EACvBlB,EAASmB,0BAEHnB,EAASoB,qHAGbnB,EAAUoB,gBACZP,EAAaI,SAAU,EAKpBjB,EAAUoB,iBAAoBpB,EAAUE,WAC3Cc,MAED,CAAChB,EAAUE,UAAWF,EAAUoB,gBAAiBrB,EAAUW,IAEzDV,EAAUoB,gBAUXN,GAAqBH,EAASU,WAAaP,GAC7CC,EAAqB,MACdzB,gBAACgC,YAASC,GAAIT,KAGhBxB,gCAAGmB,IAdJE,EAASU,WAAaP,GACxBC,EAAqBJ,EAASU,UAEzB,kBC3BiC,gBAC1CtB,IAAAA,SACAyB,IAAAA,mBACAC,IAAAA,eACAhB,IAAAA,aAEkCnB,YAAe,kBAC1CS,EAQEA,EAAS2B,iBAAiBC,eAPxB,CACLzB,WAAW,EACXkB,iBAAiB,EACjBQ,QAAS,KACTC,YAAa,YANZ7B,OAAW8B,UAYlBxC,aAAgB,cACTS,GAAayB,SAKdzB,EAASgC,QAAQP,oBAAsBA,GACzCjB,QAAQyB,KAAK,yLAEfjC,EAASgC,QAAQP,+DAAqB,WAAOzB,EAAmBkC,mFAC9DT,EAAmBzB,EAAsBkC,sGAI3ClC,EAASmC,UAAe,8BAA4B,YAA+BnC,EAASmC,WAG5FnC,EAAS2B,iBAAiBS,WAAU,SAACnC,GACnC8B,EAAa9B,MAIVD,EAASqC,mBACZrC,EAAS2B,iBAAiBW,kBAGrB,kBAAMtC,EAAS2B,iBAAiBY,iBACtC,CAACvC,EAAUyB,KAETzB,EAAU,KACPO,EAAM,IAAIiC,eAAa,6DACtBjD,gBAACE,GAAUC,MAAOa,QAGtBkB,EAAoB,KACjBlB,EAAM,IAAIiC,eAAa,uEACtBjD,gBAACE,GAAUC,MAAOa,WAIzBhB,gBAACD,EAAYmD,UAASC,MAAO,CAC3B1C,SAAAA,EACAC,UAAAA,EACAU,gBAAiBe,IAEhBhB,mCCtEc,SACnBiC,OAEMC,EAAmB,SAACC,OAClBC,EAAgBtD,WACfD,gBAACoD,mBAAoBG,EAAoCD,YAElED,EAAiBG,YAAc,iBAAmBJ,EAAgBI,aAAeJ,EAAgBhD,MAC1FiD"}